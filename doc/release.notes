DD4hep  ----  Release Notes
=================================

2013/21/06    Markus Frank
--------------------------
   1) Since the placement model for combined translations and rotations
      caused more confusion than good, it was agreed to move to a more
      Geant4 like placement model using Vectors, Rotations and Transformations
      from ROOT::Math. To place a physical volume only one of these
      is allowed as an argument: either a rotation or a translation
      for simple placements. Combinations may be constructed with Transform3D
      objects allowing more complicated placements.
      The same mechanism was applied for the operations to construct
      boolean solids.
   2) The CLICSid Examples were updated according to the changes necessary
      from 1)
   3) The Tesla drivers from the ILDExDet example were removed. They are
      not compliant to 1).
   4) The G4 package allows now to translate TGeo geometries to Geant4.
      Visual inspection has shown an agreement between the two geometries.
   5) The TGeo to LCDD/GDML conversion is still buggy. Hence, simulations
      using slic as an engine do not yet work. This is being looked at.

   IMPORTANT NOTICE:
   The changes described in 1) may affect existing detector constructors.
   Unless all problems are solved you should be careful to move to the svn
   head. In any case save your checkout or use the tag v00-03.

 --------
| v00-03 |  third beta release ...
 --------   - broken geometry (for some rotations/translations)
            - 'backup release' before placement options 
               will be reduced

 --------
| v00-02 |  second beta release ...
 --------


2013/02/06    Markus Frank
--------------------------
  1) Simplyfy inheritance for common objects from TNamed.
     Use direct inheritance of Object from TNamed rather than hidden 
     using the Value<a,b> construct.
  2) Added physical volume manager to simplyfy the detector element 
     and sensitive detector lookup from a given physical volume.
     This implies: If the volume manager is instantiated, the readout specifiers
     MUST be correct. This is in most xml files NOT the case.
     The "system" field holding the sibdetector-id is MANDATORY!
     Otherwise you will receive messages like this:

     Exception:SITCollection: This ID descriptor has no field with the name:CellID0
               while programming VolumeManager. Are your volIDs correct?

  3) To check the volume identification, add argument -volmgr to geoConverter,
     geoDisplay, etc.
  4) To trace possible memory leaks:
     export DD4HEP_TRACE=Yes
     then run you converter etc. At the end a table is displayed with a "leakage"
     column, showing how many objects were not deleted.
     
     +----------------------------------------------------------------+
     |   I n s t a n c e   c o u n t e r s   b y    T Y P E I N F O   |
     +----------+---------+-------------------------------------------+
     |   Total  | Leaking |      Type identifier                      |
     +----------+---------+-------------------------------------------+
     |        13|        0|DD4hep::Geometry::DetElement::Object
     |         3|        0|DD4hep::Geometry::SensitiveDetector::Object
     |         3|        0|DD4hep::Geometry::Readout::Object
     |         1|        0|DD4hep::Geometry::OverlayedField::Object
     |         1|        0|DD4hep::Geometry::CartesianField::Object
     ....
     Ideally the second column only has "0"s. Instances of 1 may be OK (singletons).

  Prenotice:
     As soon as ROOT v 6.00 is out, we will have to use it!
     Andrei kindly agreed to implement a few changes to TGeo, which will make 
     life much easier and the implementation cleaner and less cumbersome.


 --------
| v00-01 |
 --------
    
    - first beta release...


2013/20/03    Markus Frank
--------------------------
  1) Finished the compact->lcdd converter
     Extract lcdd information
      $ > geoConverter -compact2lcdd -input file:<compact-input-xml-file> -output <detector>.lcdd
      $ > <SimDist>/scripts/slic.sh -o output.slcio -g SiD.lcdd -m <geant4-macro>.mac -r 100 


  2) Finished the compact->gdml converter
  Full GDML cycle can be tested (deplace <detector> with some meaningful identifier):
   a) Extract gdml information
      $ > geoConverter -compact2gdml -input file:<compact-input-xml-file> -output <detector>.gdml
   b) Extract visualisation hints to csv file
      $ > geoConverter -compact2vis -input file:<compact-input-xml-file> -output <detector>.vis.csv -ascii
   c) Load GDML into ROOT:
      $ > root.exe ../doc/gdml_root.C+\(\"<detector>\"\)
      The macro expects *at least* the <detector>.gdml file. If no visualisation
      information is found, the resulting graphics however is not very nice!
 

2013/22/02    Markus Frank
--------------------------
  1) Today a decision was taken to remove all _X() and _A() macros 
  accessing static unicode strings. A common macro will be used to
  address both XML elements and XML attributes using the macro _U(...).
  The original usage only created confusion.
  All _X and _A macros were replaced by _U.

  2) Improve the executables running the plugin mechanism in UtitlityApps.
  They now complain if the plugin was not found.


2013/21/02    Markus Frank
--------------------------
  Require strict checks for the existence of xml attributes.
  e.g. default=false for Element::attr<bool>() is no longer an option.
  if the attribute is not present in the element, an exception
  is thrown.

  Slightly change the factory method for creating detector elements.
  Use a more generic pattern do support also more generic XML 
  processing.

2013/20/02    Markus Frank
--------------------------
  Install rootmap mechanism for the usage of plugins.
  It is no longer necessary to have separate programs
  for the various detector models (ILD/SiD).
  One generic display program servest them all.
  ==> Creation of package DDExamples/UtilityApps
  example: $> bin/displayGeo -compact <compact-xml-file>

  This move has another consequence:
  All libraries are build into a common install area:
  the <build directory>/lib.
  All executable binaries are build into a common install area:
  the <build directory>/bin.

  The LD_LIBRARY_PATH and PATH variables as defined in 
  'thisdd4hep.(c)sh' do include these directories

2013/20/02    Markus Frank
--------------------------
  DD4hep release notes. Better start them late than never.
  If you perform significant changes to the DD4hep core,
  plase leave a small notice here.
